<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"   
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:jee="http://www.springframework.org/schema/jee" 
    xmlns:task="http://www.springframework.org/schema/task" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd" 
    default-lazy-init="true">
    <context:component-scan base-package="cn.com.smart">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
   <!-- 定义受环境影响易变的变量 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:/jdbc.properties</value>
			</list>
		</property>
	</bean>
   
    <!-- 数据源配置,使用C3P0数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" >
		<property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 
        <property name="autoCommitOnClose" value="true"> -->
        
        <property name="checkoutTimeout" value="${c3p0.pool.checkoutTimeout}" />
        <property name="initialPoolSize" value="${c3p0.pool.initialPoolSize}" />
        <property name="minPoolSize" value="${c3p0.pool.minPoolSize}" />
        <property name="maxPoolSize" value="${c3p0.pool.maxPoolSize}" />
        <property name="maxIdleTime" value="${c3p0.pool.maxIdleTime}" />
        <property name="acquireIncrement" value="${c3p0.pool.acquireIncrement}" />
        <property name="idleConnectionTestPeriod" value="${c3p0.pool.idleConnectionTestPeriod}" />
        <property name="automaticTestTable" value="${c3p0.pool.automaticTestTable}" />
	</bean>
	
	<!-- Hibernate配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	    <property name="dataSource" ref="dataSource" />  
	    <property name="hibernateProperties">
	       <props>
	           <prop key="hibernate.dialect">${jdbc.dialect}</prop> 
	           <prop key="hibernate.hbm2ddl.auto">update</prop>
	           <prop key="hibernate.show_sql">true</prop>
	           <!--  
	           <prop key="hibernate.format_sql">true</prop>-->
	           
	           <prop key="hibernate.ddl-auto">validate</prop>
	           <prop key="hibernate.naming-strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
	           
	           <prop key="hibernate.connection.useUnicode">true</prop>
	           <prop key="hibernate.connection.characterEncoding">UTF-8</prop>
	           <prop key="javax.persistence.validation.mode">none</prop> 
	           <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop> 
	           
	           <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop><!-- 指定cache实现类 -->  
	           <prop key="hibernate.cache.use_second_level_cache">true</prop><!-- 启用二级缓存 -->  
	           <prop key="hibernate.cache.use_query_cache">true</prop><!-- 启用查询缓存 -->  
	           <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop><!-- 指定ehcache配置文件 -->
		       
	       </props>
	    </property>
	    <property name="packagesToScan">
	        <list>
	           <value>cn.com.smart.*.*.entity</value>
	        </list>
	    </property>
	    <property name="mappingResources">
	       <list>
	          <value>hbm/snaker.task.hbm.xml</value>
	          <value>hbm/snaker.order.hbm.xml</value>
	          <value>hbm/snaker.ccorder.hbm.xml</value>
	          <value>hbm/snaker.process.hbm.xml</value>
	          <value>hbm/snaker.taskactor.hbm.xml</value>
	          <value>hbm/snaker.workitem.hbm.xml</value>
	          <value>hbm/snaker.surrogate.hbm.xml</value>
	       </list>
	    </property>
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	    <property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="execute*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			
			<!-- snaker事务 -->
			<tx:method name="start*" propagation="REQUIRED"/>
			<tx:method name="assign*" propagation="REQUIRED" /> 
			<tx:method name="complete*" propagation="REQUIRED" />
			<tx:method name="finish*" propagation="REQUIRED" />
			<tx:method name="terminate*" propagation="REQUIRED" /> 
			<tx:method name="take*" propagation="REQUIRED" />
			<tx:method name="deploy*" propagation="REQUIRED" />
			<tx:method name="undeploy*" propagation="REQUIRED" />
			<tx:method name="redeploy*" propagation="REQUIRED" />
			<tx:method name="change*" propagation="REQUIRED" />
			
			<tx:method name="search*" propagation="REQUIRED" read-only="true" />
			<tx:method name="is*" propagation="REQUIRED" read-only="true" />
 			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="check*" propagation="REQUIRED" read-only="true" />
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />

		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.com.smart.dao..*.*(..))
		or execution(* cn.com.smart.*.dao..*.*(..)) 
		or execution(* cn.com.smart.service.impl..*.*(..)) 
		or execution(* cn.com.smart.*.service..*.*(..)) 
		or execution(* org.snaker.engine.core..*.*(..))" />
	</aop:config>
	<aop:aspectj-autoproxy proxy-target-class="true" />
    <!-- 支持注解事物 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
    
	
	<!-- 定义用于执行定时任务的类(扫描任务定时器)-->
	<bean id="scanProcess" class="cn.com.smart.flow.timer.ScanProcessTimer" />
	<!-- 定时器配置 -->
	<bean id="scanProcessJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scanProcess" />
		<property name="targetMethod" value="run" />
		<!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->  
		<property name="concurrent" value="false"></property>
	</bean>
	<!-- 定义时间间隔触发器 -->
	<bean id="scanProcessTigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="scanProcessJob" />
		<property name="startDelay" value="300000" /><!-- 调度工厂实例化后，经过1分钟开始执行调度 -->  
		<property name="repeatInterval" value="3600000" /><!-- 每一个小时调度一次 -->  
	</bean>
	<!-- 启动定时器 -->
	<bean id="startJob" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="scanProcessTigger" />
			</list>
		</property>
	</bean>
</beans>
